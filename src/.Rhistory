select(Comparison, Median, FC, RefinedClass)
View(FC)
FC = totalLipidByClass %>%
filter(RefinedClass == i) %>%
group_by(Treatment) %>%
mutate(Median = median(totalLipid)) %>%
ungroup() %>%
select(Treatment, RefinedClass, Median) %>%
distinct() %>%
mutate(FC = Median / filter(., Treatment == 'Chow8')$Median) %>%
filter(Treatment != 'Chow8') %>%
mutate(Comparison = paste(Treatment, "-", "Chow8", sep = "")) #%>%
View(FC)
FC = totalLipidByClass %>%
filter(RefinedClass == i) %>%
group_by(Treatment) %>%
mutate(Median = median(totalLipid)) %>%
ungroup()
View(FC)
FC = totalLipidByClass %>%
filter(RefinedClass == i) %>%
group_by(Treatment) %>%
mutate(Median = median(totalLipid)) %>%
ungroup() %>%
select(Treatment, RefinedClass, Median) %>%
distinct()
View(FC)
FC = totalLipidByClass %>%
filter(RefinedClass == i) %>%
group_by(Treatment) %>%
mutate(Median = median(totalLipid)) %>%
ungroup() %>%
select(Treatment, RefinedClass, Median) %>%
distinct() %>%
mutate(FC = Median / filter(., Treatment == 'Chow8')$Median) %>%
filter(Treatment != 'Chow8') %>%
mutate(Comparison = paste(Treatment, "-", "Chow8", sep = "")) %>%
select(Comparison, Median, FC, RefinedClass)
View(FC)
lipidClasses = levels(factor(totalLipidByClass$RefinedClass))
pval_table = data.frame("Comparison" = character(), "pval" = double(), "Median" = double(), "FC" = double(), "RefinedClass" = character(), stringsAsFactors = FALSE)
for(i in lipidClasses) {
result = DunnettTest(totalLipid ~ Treatment,
data = filter(totalLipidByClass, RefinedClass == i),
control = 'Chow8')
FC = totalLipidByClass %>%
filter(RefinedClass == i) %>%
group_by(Treatment) %>%
mutate(Median = median(totalLipid)) %>%
ungroup() %>%
select(Treatment, RefinedClass, Median) %>%
distinct() %>%
mutate(FC = Median / filter(., Treatment == 'Chow8')$Median) %>%
filter(Treatment != 'Chow8') %>%
mutate(Comparison = paste(Treatment, "-", "Chow8", sep = "")) %>%
select(Comparison, Median, FC, RefinedClass)
# combine the significance and fold-change into single entry
entry = as.data.frame(result$Chow8) %>%
select(pval) %>%
tibble::rownames_to_column(var = "Comparison") %>%
left_join(., FC, by = "Comparison")
pval_table = rbind(pval_table, entry)
}
View(pval_table)
?DunnettTest
View(pval_table)
# Liver lipidomics bubble plot of diet vs. fold-change. Fold-change is calculated using the median lipid abundance for each diet. Size of bubble highlights signficance (from Dunnett's test that does post hoc pairwise multiple comparisons procedure)
colors <- c("#A00000", "#00C000", "#5757F9", "#FF6000", "#0000C0", "#D7B0B0", "#9F044D",
"#077E97", "#C5944E", "#034E61", "#FFA040", "#606060", "#FFFFE0")
pval_table %>%
mutate(log2FC = log2(FC)) %>%
mutate(log10P = -log10(pval)) %>%
mutate(log10Abundance = log10(Median)) %>%
arrange(desc(log10Abundance)) %>%
mutate(Significant = ifelse(pval < 0.05, "yes", "no")) %>%
ggplot(aes(x=log2FC, y=log10Abundance, size=log10P, fill=RefinedClass)) +
geom_vline(xintercept = 0, linetype = 'solid', color = 'black') +
geom_hline(yintercept = c(2, 3, 4, 5, 6), linetype = 'dotted', color = 'grey70', size = 1) +
geom_point(alpha=0.9, aes(fill = RealClass), color = 'black', pch = 21, stroke = 1) +
scale_size(range = c(5, 20), name="Significance -log10(P)") +
xlim(-2, 6) +
scale_fill_manual(values = ann_colors) +
facet_grid(~Comparison, scales = 'fixed') +
labs(x = "log2(Fold-change)", y = "log10(Abundance)")
pval_table %>%
mutate(log2FC = log2(FC)) %>%
mutate(log10P = -log10(pval)) %>%
mutate(log10Abundance = log10(Median)) %>%
arrange(desc(log10Abundance)) %>%
mutate(Significant = ifelse(pval < 0.05, "yes", "no")) %>%
ggplot(aes(x=log2FC, y=log10Abundance, size=log10P, fill=RefinedClass)) +
geom_vline(xintercept = 0, linetype = 'solid', color = 'black') +
geom_hline(yintercept = c(2, 3, 4, 5, 6), linetype = 'dotted', color = 'grey70', size = 1) +
geom_point(alpha=0.9, aes(fill = RealClass), color = 'black', pch = 21, stroke = 1) +
scale_size(range = c(5, 20), name="Significance -log10(P)") +
xlim(-2, 6) +
scale_fill_manual(values = colors) +
facet_grid(~Comparison, scales = 'fixed') +
labs(x = "log2(Fold-change)", y = "log10(Abundance)")
pval_table %>%
mutate(log2FC = log2(FC)) %>%
mutate(log10P = -log10(pval)) %>%
mutate(log10Abundance = log10(Median)) %>%
arrange(desc(log10Abundance)) %>%
mutate(Significant = ifelse(pval < 0.05, "yes", "no")) %>%
ggplot(aes(x=log2FC, y=log10Abundance, size=log10P, fill=RefinedClass)) +
geom_vline(xintercept = 0, linetype = 'solid', color = 'black') +
geom_hline(yintercept = c(2, 3, 4, 5, 6), linetype = 'dotted', color = 'grey70', size = 1) +
geom_point(alpha=0.9, aes(fill = RefinedClass), color = 'black', pch = 21, stroke = 1) +
scale_size(range = c(5, 20), name="Significance -log10(P)") +
xlim(-2, 6) +
scale_fill_manual(values = colors) +
facet_grid(~Comparison, scales = 'fixed') +
labs(x = "log2(Fold-change)", y = "log10(Abundance)")
pval_table %>%
mutate(log2FC = log2(FC)) %>%
mutate(log10P = -log10(pval)) %>%
mutate(log10Abundance = log10(Median)) %>%
arrange(desc(log10Abundance)) %>%
mutate(Significant = ifelse(pval < 0.05, "yes", "no")) %>%
ggplot(aes(x=log2FC, y=log10Abundance, size=log10P, fill=RefinedClass)) +
geom_vline(xintercept = 0, linetype = 'solid', color = 'black') +
geom_hline(yintercept = c(2, 3, 4, 5, 6), linetype = 'dotted', color = 'grey70', size = 1) +
geom_point(alpha=0.9, aes(fill = RefinedClass), color = 'black', pch = 21, stroke = 1) +
scale_size(range = c(5, 20), name="Significance -log10(P)") +
xlim(-2, 4) +
scale_fill_manual(values = colors) +
facet_grid(~Comparison, scales = 'fixed') +
labs(x = "log2(Fold-change)", y = "log10(Abundance)")
pval_table %>%
mutate(log2FC = log2(FC)) %>%
mutate(log10P = -log10(pval)) %>%
mutate(log10Abundance = log10(Median)) %>%
arrange(desc(log10Abundance)) %>%
mutate(Significant = ifelse(pval < 0.05, "yes", "no")) %>%
ggplot(aes(x=log2FC, y=log10Abundance, size=log10P, fill=RefinedClass)) +
geom_vline(xintercept = 0, linetype = 'solid', color = 'black') +
geom_hline(yintercept = c(2, 3, 4), linetype = 'dotted', color = 'grey70', size = 1) +
geom_point(alpha=0.9, aes(fill = RefinedClass), color = 'black', pch = 21, stroke = 1) +
scale_size(range = c(5, 20), name="Significance -log10(P)") +
xlim(-2, 6) +
scale_fill_manual(values = colors) +
facet_grid(~Comparison, scales = 'fixed') +
labs(x = "log2(Fold-change)", y = "log10(Abundance)")
View(liverData)
# triglyceride abundance heatmaps by TG class
scaled_liverData = cbind(liverData[,c(1,2)], scale(liverData[,-c(1,2)])) # mean 0, sd 1
View(scaled_liverData)
TG_data = scaled_liverData %>%
gather(Feature, Value, 3:ncol(.)) %>%
separate(col = 'Feature', into = c("Class"), sep = "\\.", remove = FALSE, extra = 'drop') %>%
filter(grepl("TG", Class))
View(TG_data)
TG_data = scaled_liverData %>%
gather(Feature, Value, 3:ncol(.)) %>%
separate(col = 'Feature', into = c("Class", "Specific"), sep = "\\.",
remove = FALSE, extra = 'drop') %>%
filter(grepl("TG", Class))
View(TG_data)
TG_data = scaled_liverData %>%
gather(Feature, Value, 3:ncol(.)) %>%
separate(col = 'Feature', into = c("Class", "Chain"), sep = "\\.",
remove = FALSE, extra = 'drop') %>%
filter(grepl("TG", Class))
TG_data = scaled_liverData %>%
gather(Feature, Value, 3:ncol(.)) %>%
separate(col = 'Feature', into = c("Class", "Chain"), sep = "\\.",
remove = FALSE, extra = 'drop') %>%
filter(grepl("TG", Class)) %>%
group_by(Class, Chain, ID) %>%
mutate(totalLipid = sum(Value)) %>%
ungroup() %>%
select(ID, Treatment, Class, Chain, totalLipid) %>%
distinct()
View(TG_data)
order = c(1:4, 5:9)
View(TG_data)
(TG_data %>% filter(Treatment == 'Chow8'))$ID
unique((TG_data %>% filter(Treatment == 'Chow8'))$ID)
unique((TG_data %>% filter(Treatment == 'WD2'))$ID)
unique((TG_data %>% filter(Treatment == 'WD4'))$ID)
unique((TG_data %>% filter(Treatment == 'WD8'))$ID)
order = c(unique((TG_data %>% filter(Treatment == 'Chow8'))$ID),
unique((TG_data %>% filter(Treatment == 'WD2'))$ID),
unique((TG_data %>% filter(Treatment == 'WD4'))$ID),
unique((TG_data %>% filter(Treatment == 'WD6'))$ID),
unique((TG_data %>% filter(Treatment == 'WD8'))$ID))
TG48_data = TG_data %>% filter(Chain == 48)
View(TG48_data)
TG_data = liverData %>%
gather(Feature, Value, 3:ncol(.)) %>%
separate(col = 'Feature', into = c("Class", "Chain"), sep = "\\.",
remove = FALSE, extra = 'drop') %>%
filter(grepl("TG", Class)) %>%
group_by(Class, Chain, ID) %>%
mutate(totalLipid = sum(Value)) %>%
ungroup() %>%
select(ID, Treatment, Class, Chain, totalLipid) %>%
distinct()
View(TG_data)
# looks like TG __ is the most abundant
TG48_data = scaled_liverData %>%
gather(Feature, Value, 3:ncol(.)) %>%
separate(col = 'Feature', into = c("Class", "Chain"), sep = "\\.",
remove = FALSE, extra = 'drop') %>%
filter(Class == 'TG', Chain == 48)
View(TG48_data)
# looks like TG __ is the most abundant
TG48_data = scaled_liverData %>%
gather(Feature, Value, 3:ncol(.)) %>%
separate(col = 'Feature', into = c("Class", "Chain"), sep = "\\.",
remove = FALSE, extra = 'drop') %>%
filter(Class == 'TG', Chain == 48) %>%
distinct()
# looks like TG __ is the most abundant
TG48_data = scaled_liverData %>%
gather(Feature, Value, 3:ncol(.)) %>%
separate(col = 'Feature', into = c("Class", "Chain"), sep = "\\.",
remove = FALSE, extra = 'drop') %>%
filter(Class == 'TG', Chain == 48)
order = c(unique((TG_data %>% filter(Treatment == 'Chow8'))$ID),
unique((TG_data %>% filter(Treatment == 'WD2'))$ID),
unique((TG_data %>% filter(Treatment == 'WD4'))$ID),
unique((TG_data %>% filter(Treatment == 'WD6'))$ID),
unique((TG_data %>% filter(Treatment == 'WD8'))$ID))
TG48_data %>% ggplot(aes(x = Feature, y = as.factor(ID))) +
geom_tile(aes(fill = Value), alpha = 1, color = 'white', size = 0.1) +
scale_fill_distiller(palette = "Spectral") +
scale_y_discrete(limits = rev(factor(order))) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x = element_blank(), axis.title.y = element_blank())
autoplot(prcomp(plasmaData[-c(1,2)], scale. = TRUE), data = plasmaData, colour = 'Treatment',
size = 0.1, label = TRUE, label.size = 3, frame = TRUE, frame.type = 'norm',
frame.level = 0.95) +
scale_color_manual(values = c('black', '#3b9bb3', '#75af4f', '#e39225', '#c13b41')) +
scale_fill_manual(values = c('black', '#3b9bb3', '#75af4f', '#e39225', '#c13b41'))
plasmaData = read.csv('../processed_data/datasets/Plasma_liver.csv', header = TRUE, stringsAsFactors = FALSE, check.names = FALSE)
plasmaData = read.csv('../processed_data/datasets/Lipidomics_plasma.csv', header = TRUE, stringsAsFactors = FALSE, check.names = FALSE)
autoplot(prcomp(plasmaData[-c(1,2)], scale. = TRUE), data = plasmaData, colour = 'Treatment',
size = 0.1, label = TRUE, label.size = 3, frame = TRUE, frame.type = 'norm',
frame.level = 0.95) +
scale_color_manual(values = c('black', '#3b9bb3', '#75af4f', '#e39225', '#c13b41')) +
scale_fill_manual(values = c('black', '#3b9bb3', '#75af4f', '#e39225', '#c13b41'))
# PCA plot of plasma lipidomics data
autoplot(prcomp(plasmaData[-c(1,2)], scale. = TRUE), data = plasmaData, colour = 'Treatment', size = 2.5) + scale_color_manual(values = c('black', '#3b9bb3', '#75af4f', '#e39225', '#c13b41'))
# Generate dataframe for plasma lipidomics bubble plot
totalLipidByClass = plasmaData %>%
gather(Feature, Value, 3:ncol(.)) %>%
separate(col = 'Feature', into = c("Class"), sep = "\\.", remove = FALSE, extra = 'drop') %>%
mutate(RefinedClass = ifelse(grepl("PE[.]O", Feature), "PE_O",
ifelse(grepl("PE[.]P", Feature), "PE_P", Class))) %>%
select(-Class) %>%
group_by(ID, RefinedClass) %>%
mutate(totalLipid = sum(Value)) %>%
ungroup() %>%
select(ID, Treatment, RefinedClass, totalLipid) %>%
distinct()
# Use Dunnett's test to get significance of each lipid class at WD2,4,6,8 relative to control
totalLipidByClass$Treatment <- as.factor(totalLipidByClass$Treatment)
lipidClasses = levels(factor(totalLipidByClass$RefinedClass))
pval_table = data.frame("Comparison" = character(), "pval" = double(), "Median" = double(), "FC" = double(), "RefinedClass" = character(), stringsAsFactors = FALSE)
for(i in lipidClasses) {
result = DunnettTest(totalLipid ~ Treatment,
data = filter(totalLipidByClass, RefinedClass == i),
control = 'Chow8')
FC = totalLipidByClass %>%
filter(RefinedClass == i) %>%
group_by(Treatment) %>%
mutate(Median = median(totalLipid)) %>%
ungroup() %>%
select(Treatment, RefinedClass, Median) %>%
distinct() %>%
mutate(FC = Median / filter(., Treatment == 'Chow8')$Median) %>%
filter(Treatment != 'Chow8') %>%
mutate(Comparison = paste(Treatment, "-", "Chow8", sep = "")) %>%
select(Comparison, Median, FC, RefinedClass)
# combine the significance and fold-change into single entry
entry = as.data.frame(result$Chow8) %>%
select(pval) %>%
tibble::rownames_to_column(var = "Comparison") %>%
left_join(., FC, by = "Comparison")
pval_table = rbind(pval_table, entry)
}
View(pval_table)
# Plasma lipidomics bubble plot of diet vs. fold-change. Fold-change is calculated using the median lipid abundance for each diet. Size of bubble highlights signficance (from Dunnett's test that does post hoc pairwise multiple comparisons procedure)
ann_colors <- c("#A00000", "#5757F9", "#FF6000", "#D7B0B0", "#077E97", "#606060", "#FFFFE0")
pval_table %>%
mutate(log2FC = log2(FC)) %>%
mutate(log10P = -log10(pval)) %>%
mutate(log10Abundance = log10(Median)) %>%
arrange(desc(log10Abundance)) %>%
mutate(Significant = ifelse(pval < 0.05, "yes", "no")) %>%
ggplot(aes(x=log2FC, y=log10Abundance, size=log10P, fill=RefinedClass)) +
geom_vline(xintercept = 0, linetype = 'solid', color = 'black') +
geom_hline(yintercept = c(2, 3, 4), linetype = 'dotted', color = 'grey70', size = 1) +
geom_point(alpha=0.9, aes(fill = RefinedClass), color = 'black', pch = 21, stroke = 1) +
scale_size(range = c(5, 20), name="Significance -log10(P)") +
xlim(-2, 6) +
scale_fill_manual(values = colors) +
facet_grid(~Comparison, scales = 'fixed') +
labs(x = "log2(Fold-change)", y = "log10(Abundance)")
pval_table %>%
mutate(log2FC = log2(FC)) %>%
mutate(log10P = -log10(pval)) %>%
mutate(log10Abundance = log10(Median)) %>%
arrange(desc(log10Abundance)) %>%
mutate(Significant = ifelse(pval < 0.05, "yes", "no")) %>%
ggplot(aes(x=log2FC, y=log10Abundance, size=log10P, fill=RefinedClass)) +
geom_vline(xintercept = 0, linetype = 'solid', color = 'black') +
geom_hline(yintercept = c(2, 3, 4), linetype = 'dotted', color = 'grey70', size = 1) +
geom_point(alpha=0.9, aes(fill = RefinedClass), color = 'black', pch = 21, stroke = 1) +
scale_size(range = c(5, 20), name="Significance -log10(P)") +
xlim(-2, 3) +
scale_fill_manual(values = colors) +
facet_grid(~Comparison, scales = 'fixed') +
labs(x = "log2(Fold-change)", y = "log10(Abundance)")
pval_table %>%
mutate(log2FC = log2(FC)) %>%
mutate(log10P = -log10(pval)) %>%
mutate(log10Abundance = log10(Median)) %>%
arrange(desc(log10Abundance)) %>%
mutate(Significant = ifelse(pval < 0.05, "yes", "no")) %>%
ggplot(aes(x=log2FC, y=log10Abundance, size=log10P, fill=RefinedClass)) +
geom_vline(xintercept = 0, linetype = 'solid', color = 'black') +
geom_hline(yintercept = c(2, 3, 4), linetype = 'dotted', color = 'grey70', size = 1) +
geom_point(alpha=0.9, aes(fill = RefinedClass), color = 'black', pch = 21, stroke = 1) +
scale_size(range = c(5, 20), name="Significance -log10(P)") +
xlim(-2, 2) +
scale_fill_manual(values = colors) +
facet_grid(~Comparison, scales = 'fixed') +
labs(x = "log2(Fold-change)", y = "log10(Abundance)")
CE18_1_data = scaled_plasmaData %>%
gather(Feature, Value, 3:ncol(.)) %>%
separate(col = 'Feature', into = c("Class", "Chain1", "Chain2"), sep = "\\.",
remove = FALSE, extra = 'drop') %>%
filter(Class == 'CE', Chain1 == 18, Chain2 == 1)
# CE abundance heat map for a specific CE (CE(18:1))
scaled_plasmaData = cbind(plasmaData[,c(1,2)], scale(plasmaData[,-c(1,2)])) # mean 0, sd 1
CE18_1_data = scaled_plasmaData %>%
gather(Feature, Value, 3:ncol(.)) %>%
separate(col = 'Feature', into = c("Class", "Chain1", "Chain2"), sep = "\\.",
remove = FALSE, extra = 'drop') %>%
filter(Class == 'CE', Chain1 == 18, Chain2 == 1)
View(CE18_1_data)
order = c(unique((TG_data %>% filter(Treatment == 'Chow8'))$ID),
unique((TG_data %>% filter(Treatment == 'WD2'))$ID),
unique((TG_data %>% filter(Treatment == 'WD4'))$ID),
unique((TG_data %>% filter(Treatment == 'WD6'))$ID),
unique((TG_data %>% filter(Treatment == 'WD8'))$ID))
CE18_1_data %>% ggplot(aes(x = Feature, y = as.factor(ID))) +
geom_tile(aes(fill = Value), alpha = 1, color = 'white', size = 0.1) +
scale_fill_distiller(palette = "Spectral") +
scale_y_discrete(limits = rev(factor(order))) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x = element_blank(), axis.title.y = element_blank())
View(CE18_1_data)
View(CE18_1_data)
CE_data = scaled_plasmaData %>%
gather(Feature, Value, 3:ncol(.)) %>%
separate(col = 'Feature', into = c("Class"), sep = "\\.",
remove = FALSE, extra = 'drop') %>%
filter(Class == 'CE')
order = c(unique((CE18_1_data %>% filter(Treatment == 'Chow8'))$ID),
unique((CE18_1_data %>% filter(Treatment == 'WD2'))$ID),
unique((CE18_1_data %>% filter(Treatment == 'WD4'))$ID),
unique((CE18_1_data %>% filter(Treatment == 'WD6'))$ID),
unique((CE18_1_data %>% filter(Treatment == 'WD8'))$ID))
CE_data %>% ggplot(aes(x = Feature, y = as.factor(ID))) +
geom_tile(aes(fill = Value), alpha = 1, color = 'white', size = 0.1) +
scale_fill_distiller(palette = "Spectral") +
scale_y_discrete(limits = rev(factor(order))) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x = element_blank(), axis.title.y = element_blank())
# CE abundance heat map for a specific CE (CE(18:1))
plasmaData %>% select(grepl("CE", colnames(.)))
# CE abundance heat map for a specific CE (CE(18:1))
plasmaData %>% select(grep("CE", colnames(.)))
# CE abundance heat map for a specific CE (CE(18:1))
plasmaData %>% select(grep("CE", colnames(.))) %>%
colMeans()
# CE abundance heat map for a specific CE (CE(18:1))
test = plasmaData %>% select(grep("CE", colnames(.))) %>%
colMeans()
test
# CE abundance heat map for a specific CE (CE(18:1))
test = plasmaData %>% select(grep("CE", colnames(.))) %>%
colMeans() %>% as.tibble()
# CE abundance heat map for a specific CE (CE(18:1))
test = plasmaData %>% select(grep("CE", colnames(.))) %>%
colMeans() %>% as.data.frame()
View(test)
# CE abundance heat map for a specific CE (CE(18:1))
test = plasmaData %>% select(grep("CE", colnames(.))) %>%
colMeans() %>% as_tibble()
View(test)
# CE abundance heat map for a specific CE (CE(18:1))
test = plasmaData %>% select(grep("CE", colnames(.))) %>%
colMeans() %>% as.data.frame("mean_abundance")
# CE abundance heat map for a specific CE (CE(18:1))
test = plasmaData %>% select(grep("CE", colnames(.))) %>%
colMeans() %>% as.data.frame(col.names = c("mean_abundance"))
View(test)
# CE abundance heat map for a specific CE (CE(18:1))
test = plasmaData %>% select(grep("CE", colnames(.))) %>%
colMeans() %>% as.data.frame(colnames = c("mean_abundance"))
View(test)
# CE abundance heat map for a specific CE (CE(18:1))
test = plasmaData %>% select(grep("CE", colnames(.))) %>%
colMeans() %>% as.data.frame() %>%
filter(. > 10)
View(test)
CE_data %>% ggplot(aes(x = Feature, y = as.factor(ID))) +
geom_tile(aes(fill = Value), alpha = 1, color = 'white', size = 0.1) +
scale_fill_distiller(palette = "Spectral") +
scale_y_discrete(limits = rev(factor(order))) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x = element_blank(), axis.title.y = element_blank())
# CE abundance heat map for a specific CE (CE(18:1))
test = plasmaData %>% select(grep("CE", colnames(.))) %>%
colMeans() %>% as.data.frame() %>%
filter(. > 20)
View(test)
# CE abundance heat map for a specific CE (CE(18:1))
abundant_CE = plasmaData %>% select(grep("CE", colnames(.))) %>%
colMeans() %>% as.data.frame() %>%
filter(. > 20)
View(abundant_CE)
scaled_plasmaData = cbind(plasmaData[,c(1,2)],
scale(plasmaData %>% select(rownames(abundant_CE)))) # mean 0, sd 1
View(scaled_plasmaData)
CE_data = scaled_plasmaData %>%
gather(Feature, Value, 3:ncol(.))
View(CE_data)
order = c(unique((CE18_1_data %>% filter(Treatment == 'Chow8'))$ID),
unique((CE18_1_data %>% filter(Treatment == 'WD2'))$ID),
unique((CE18_1_data %>% filter(Treatment == 'WD4'))$ID),
unique((CE18_1_data %>% filter(Treatment == 'WD6'))$ID),
unique((CE18_1_data %>% filter(Treatment == 'WD8'))$ID))
CE_data %>% ggplot(aes(x = Feature, y = as.factor(ID))) +
geom_tile(aes(fill = Value), alpha = 1, color = 'white', size = 0.1) +
scale_fill_distiller(palette = "Spectral") +
scale_y_discrete(limits = rev(factor(order))) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x = element_blank(), axis.title.y = element_blank())
order
# CE abundance heat map for a specific CE (CE(18:1))
abundant_CE = plasmaData %>% select(grep("CE", colnames(.))) %>%
colMeans() %>% as.data.frame() %>%
filter(. > 15)
View(abundant_CE)
# CE abundance heat map for a specific CE (CE(18:1))
abundant_CE = plasmaData %>% select(grep("CE", colnames(.))) %>%
colMeans() %>% as.data.frame() %>%
filter(. > 20)
View(abundant_CE)
# CE abundance heat map for a specific CE (CE(18:1))
abundant_CE = plasmaData %>% select(grep("CE", colnames(.))) %>%
colMeans() %>% as.data.frame() %>%
filter(. > 50)
scaled_plasmaData = cbind(plasmaData[,c(1,2)],
scale(plasmaData %>% select(rownames(abundant_CE)))) # mean 0, sd 1
CE_data = scaled_plasmaData %>%
gather(Feature, Value, 3:ncol(.))
order = c(unique((CE18_1_data %>% filter(Treatment == 'Chow8'))$ID),
unique((CE18_1_data %>% filter(Treatment == 'WD2'))$ID),
unique((CE18_1_data %>% filter(Treatment == 'WD4'))$ID),
unique((CE18_1_data %>% filter(Treatment == 'WD6'))$ID),
unique((CE18_1_data %>% filter(Treatment == 'WD8'))$ID))
CE_data %>% ggplot(aes(x = Feature, y = as.factor(ID))) +
geom_tile(aes(fill = Value), alpha = 1, color = 'white', size = 0.1) +
scale_fill_distiller(palette = "Spectral") +
scale_y_discrete(limits = rev(factor(order))) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x = element_blank(), axis.title.y = element_blank())
# CE abundance heat map for a specific CE (CE(18:1))
abundant_CE = plasmaData %>% select(grep("CE", colnames(.))) %>%
colMeans() %>% as.data.frame() %>%
filter(. > 40)
scaled_plasmaData = cbind(plasmaData[,c(1,2)],
scale(plasmaData %>% select(rownames(abundant_CE)))) # mean 0, sd 1
CE_data = scaled_plasmaData %>%
gather(Feature, Value, 3:ncol(.))
order = c(unique((CE18_1_data %>% filter(Treatment == 'Chow8'))$ID),
unique((CE18_1_data %>% filter(Treatment == 'WD2'))$ID),
unique((CE18_1_data %>% filter(Treatment == 'WD4'))$ID),
unique((CE18_1_data %>% filter(Treatment == 'WD6'))$ID),
unique((CE18_1_data %>% filter(Treatment == 'WD8'))$ID))
CE_data %>% ggplot(aes(x = Feature, y = as.factor(ID))) +
geom_tile(aes(fill = Value), alpha = 1, color = 'white', size = 0.1) +
scale_fill_distiller(palette = "Spectral") +
scale_y_discrete(limits = rev(factor(order))) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x = element_blank(), axis.title.y = element_blank())
# CE abundance heat map for a specific CE (CE(18:1))
abundant_CE = plasmaData %>% select(grep("CE", colnames(.))) %>%
colMeans() %>% as.data.frame() %>%
filter(. > 50)
scaled_plasmaData = cbind(plasmaData[,c(1,2)],
scale(plasmaData %>% select(rownames(abundant_CE)))) # mean 0, sd 1
CE_data = scaled_plasmaData %>%
gather(Feature, Value, 3:ncol(.))
order = c(unique((CE18_1_data %>% filter(Treatment == 'Chow8'))$ID),
unique((CE18_1_data %>% filter(Treatment == 'WD2'))$ID),
unique((CE18_1_data %>% filter(Treatment == 'WD4'))$ID),
unique((CE18_1_data %>% filter(Treatment == 'WD6'))$ID),
unique((CE18_1_data %>% filter(Treatment == 'WD8'))$ID))
CE_data %>% ggplot(aes(x = Feature, y = as.factor(ID))) +
geom_tile(aes(fill = Value), alpha = 1, color = 'white', size = 0.1) +
scale_fill_distiller(palette = "Spectral") +
scale_y_discrete(limits = rev(factor(order))) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x = element_blank(), axis.title.y = element_blank())

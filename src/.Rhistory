dplyr::select(-Class) %>%
group_by(Mouse_ID, RealClass) %>%
mutate(sumLipids = sum(Value)) %>%
ungroup() %>%
dplyr::select(Mouse_ID, Treatment, RealClass, sumLipids) %>%
distinct() %>%
filter(RealClass == 'CE') %>%
ggplot(aes(x = Treatment, y = sumLipids)) + geom_boxplot() + geom_text(aes(label = Mouse_ID))
plasmaCE_data = scaled_plasma %>%
gather(Feature, Value, 3:276) %>%
separate(col = 'Feature', into = c("Class"), sep = "\\.", remove = FALSE, extra = 'drop') %>%
na.omit() %>%
filter(Class == "CE")
# plasma CE heatmap
complete_plasmaData %>%
tibble::rownames_to_column(var = "Mouse_ID") %>%
gather(Feature, Value, 2:275) %>%
separate(col = 'Feature', into = c("Class"), sep = "\\.", remove = FALSE, extra = 'drop') %>%
na.omit() %>%
mutate(RealClass = ifelse(grepl('TAG', Class), 'TAG',
ifelse(grepl("PE[.]O", Feature), "PE_O",
ifelse(grepl("PE[.]P", Feature), "PE_P", Class)))) %>%
dplyr::select(-Class) %>%
group_by(Mouse_ID, RealClass) %>%
mutate(sumLipids = sum(Value)) %>%
ungroup() %>%
dplyr::select(Mouse_ID, Treatment, RealClass, sumLipids) %>%
distinct() %>%
filter(RealClass == 'CE') %>%
ggplot(aes(x = Treatment, y = sumLipids)) + geom_boxplot() + geom_text(aes(label = Mouse_ID))
scaled_plasma = complete_plasmaData %>% dplyr::select(-Treatment) %>% tibble::rownames_to_column(var = "ID") %>% separate(col = "ID", into = c("Treatment", "Mouse_ID"), sep = "_", remove = TRUE)
scaled_plasma = cbind(scaled_plasma[,c(1,2)], scale(scaled_plasma[,-c(1,2)]))
# plasma CE heatmap
complete_plasmaData %>%
tibble::rownames_to_column(var = "Mouse_ID") %>%
gather(Feature, Value, 2:275) %>%
separate(col = 'Feature', into = c("Class"), sep = "\\.", remove = FALSE, extra = 'drop') %>%
na.omit() %>%
mutate(RealClass = ifelse(grepl('TAG', Class), 'TAG',
ifelse(grepl("PE[.]O", Feature), "PE_O",
ifelse(grepl("PE[.]P", Feature), "PE_P", Class)))) %>%
dplyr::select(-Class) %>%
group_by(Mouse_ID, RealClass) %>%
mutate(sumLipids = sum(Value)) %>%
ungroup() %>%
dplyr::select(Mouse_ID, Treatment, RealClass, sumLipids) %>%
distinct() %>%
filter(RealClass == 'CE') %>%
ggplot(aes(x = Treatment, y = sumLipids)) + geom_boxplot() + geom_text(aes(label = Mouse_ID))
plasmaCE_data = scaled_plasma %>%
gather(Feature, Value, 3:276) %>%
separate(col = 'Feature', into = c("Class"), sep = "\\.", remove = FALSE, extra = 'drop') %>%
na.omit() %>%
filter(Class == "CE")
View(plasmaCE_data)
# plasma CE heatmap
complete_plasmaData %>%
tibble::rownames_to_column(var = "Mouse_ID") %>%
gather(Feature, Value, 2:275) %>%
separate(col = 'Feature', into = c("Class"), sep = "\\.", remove = FALSE, extra = 'drop') %>%
na.omit() %>%
mutate(RealClass = ifelse(grepl('TAG', Class), 'TAG',
ifelse(grepl("PE[.]O", Feature), "PE_O",
ifelse(grepl("PE[.]P", Feature), "PE_P", Class)))) %>%
dplyr::select(-Class) %>%
group_by(Mouse_ID, RealClass) %>%
mutate(sumLipids = sum(Value)) %>%
ungroup() %>%
dplyr::select(Mouse_ID, Treatment, RealClass, sumLipids) %>%
distinct() %>%
#filter(RealClass == 'CE') %>%
filter(Feature == 'CE.16.0.') %>%
ggplot(aes(x = Treatment, y = sumLipids)) + geom_boxplot() + geom_text(aes(label = Mouse_ID))
# plasma CE heatmap
complete_plasmaData %>%
tibble::rownames_to_column(var = "Mouse_ID") %>%
gather(Feature, Value, 2:275) %>%
separate(col = 'Feature', into = c("Class"), sep = "\\.", remove = FALSE, extra = 'drop') %>%
na.omit() %>%
mutate(RealClass = ifelse(grepl('TAG', Class), 'TAG',
ifelse(grepl("PE[.]O", Feature), "PE_O",
ifelse(grepl("PE[.]P", Feature), "PE_P", Class)))) %>%
dplyr::select(-Class) %>%
group_by(Mouse_ID, RealClass) %>%
mutate(sumLipids = sum(Value)) %>%
ungroup() %>%
dplyr::select(Mouse_ID, Treatment, RealClass, Feature, sumLipids) %>%
distinct() %>%
#filter(RealClass == 'CE') %>%
filter(Feature == 'CE.16.0.') %>%
ggplot(aes(x = Treatment, y = Feature)) + geom_boxplot() + geom_text(aes(label = Mouse_ID))
# plasma CE heatmap
complete_plasmaData %>%
tibble::rownames_to_column(var = "Mouse_ID") %>%
gather(Feature, Value, 2:275) %>%
separate(col = 'Feature', into = c("Class"), sep = "\\.", remove = FALSE, extra = 'drop') %>%
na.omit() %>%
mutate(RealClass = ifelse(grepl('TAG', Class), 'TAG',
ifelse(grepl("PE[.]O", Feature), "PE_O",
ifelse(grepl("PE[.]P", Feature), "PE_P", Class)))) %>%
dplyr::select(-Class) %>%
group_by(Mouse_ID, RealClass) %>%
mutate(sumLipids = sum(Value)) %>%
ungroup() %>%
dplyr::select(Mouse_ID, Treatment, RealClass, Feature, Value, sumLipids) %>%
distinct() %>%
#filter(RealClass == 'CE') %>%
filter(Feature == 'CE.16.0.') %>%
ggplot(aes(x = Treatment, y = Value)) + geom_boxplot() + geom_text(aes(label = Mouse_ID))
# plasma CE heatmap
complete_plasmaData %>%
tibble::rownames_to_column(var = "Mouse_ID") %>%
gather(Feature, Value, 2:275) %>%
separate(col = 'Feature', into = c("Class"), sep = "\\.", remove = FALSE, extra = 'drop') %>%
na.omit() %>%
mutate(RealClass = ifelse(grepl('TAG', Class), 'TAG',
ifelse(grepl("PE[.]O", Feature), "PE_O",
ifelse(grepl("PE[.]P", Feature), "PE_P", Class)))) %>%
dplyr::select(-Class) %>%
group_by(Mouse_ID, RealClass) %>%
mutate(sumLipids = sum(Value)) %>%
ungroup() %>%
dplyr::select(Mouse_ID, Treatment, RealClass, Feature, Value, sumLipids) %>%
distinct() %>%
#filter(RealClass == 'CE') %>%
filter(Feature == 'CE.14.0.') %>%
ggplot(aes(x = Treatment, y = Value)) + geom_boxplot() + geom_text(aes(label = Mouse_ID))
# plasma CE heatmap
complete_plasmaData %>%
tibble::rownames_to_column(var = "Mouse_ID") %>%
gather(Feature, Value, 2:275) %>%
separate(col = 'Feature', into = c("Class"), sep = "\\.", remove = FALSE, extra = 'drop') %>%
na.omit() %>%
mutate(RealClass = ifelse(grepl('TAG', Class), 'TAG',
ifelse(grepl("PE[.]O", Feature), "PE_O",
ifelse(grepl("PE[.]P", Feature), "PE_P", Class)))) %>%
dplyr::select(-Class) %>%
group_by(Mouse_ID, RealClass) %>%
mutate(sumLipids = sum(Value)) %>%
ungroup() %>%
dplyr::select(Mouse_ID, Treatment, RealClass, Feature, Value, sumLipids) %>%
distinct() %>%
#filter(RealClass == 'CE') %>%
filter(Feature == 'CE.12.0.') %>%
ggplot(aes(x = Treatment, y = Value)) + geom_boxplot() + geom_text(aes(label = Mouse_ID))
# plasma CE heatmap
complete_plasmaData %>%
tibble::rownames_to_column(var = "Mouse_ID") %>%
gather(Feature, Value, 2:275) %>%
separate(col = 'Feature', into = c("Class"), sep = "\\.", remove = FALSE, extra = 'drop') %>%
na.omit() %>%
mutate(RealClass = ifelse(grepl('TAG', Class), 'TAG',
ifelse(grepl("PE[.]O", Feature), "PE_O",
ifelse(grepl("PE[.]P", Feature), "PE_P", Class)))) %>%
dplyr::select(-Class) %>%
group_by(Mouse_ID, RealClass) %>%
mutate(sumLipids = sum(Value)) %>%
ungroup() %>%
dplyr::select(Mouse_ID, Treatment, RealClass, Feature, Value, sumLipids) %>%
distinct() %>%
#filter(RealClass == 'CE') %>%
filter(Feature == 'CE.18.0.') %>%
ggplot(aes(x = Treatment, y = Value)) + geom_boxplot() + geom_text(aes(label = Mouse_ID))
# plasma CE heatmap
complete_plasmaData %>%
tibble::rownames_to_column(var = "Mouse_ID") %>%
gather(Feature, Value, 2:275) %>%
separate(col = 'Feature', into = c("Class"), sep = "\\.", remove = FALSE, extra = 'drop') %>%
na.omit() %>%
mutate(RealClass = ifelse(grepl('TAG', Class), 'TAG',
ifelse(grepl("PE[.]O", Feature), "PE_O",
ifelse(grepl("PE[.]P", Feature), "PE_P", Class)))) %>%
dplyr::select(-Class) %>%
group_by(Mouse_ID, RealClass) %>%
mutate(sumLipids = sum(Value)) %>%
ungroup() %>%
dplyr::select(Mouse_ID, Treatment, RealClass, Feature, Value, sumLipids) %>%
distinct() %>%
#filter(RealClass == 'CE') %>%
filter(Feature == 'CE.18.1.') %>%
ggplot(aes(x = Treatment, y = Value)) + geom_boxplot() + geom_text(aes(label = Mouse_ID))
# plasma CE heatmap
complete_plasmaData %>%
tibble::rownames_to_column(var = "Mouse_ID") %>%
gather(Feature, Value, 2:275) %>%
separate(col = 'Feature', into = c("Class"), sep = "\\.", remove = FALSE, extra = 'drop') %>%
na.omit() %>%
mutate(RealClass = ifelse(grepl('TAG', Class), 'TAG',
ifelse(grepl("PE[.]O", Feature), "PE_O",
ifelse(grepl("PE[.]P", Feature), "PE_P", Class)))) %>%
dplyr::select(-Class) %>%
group_by(Mouse_ID, RealClass) %>%
mutate(sumLipids = sum(Value)) %>%
ungroup() %>%
dplyr::select(Mouse_ID, Treatment, RealClass, Feature, Value, sumLipids) %>%
distinct() %>%
#filter(RealClass == 'CE') %>%
filter(Feature == 'CE.18.2.') %>%
ggplot(aes(x = Treatment, y = Value)) + geom_boxplot() + geom_text(aes(label = Mouse_ID))
# plasma CE heatmap
complete_plasmaData %>%
tibble::rownames_to_column(var = "Mouse_ID") %>%
gather(Feature, Value, 2:275) %>%
separate(col = 'Feature', into = c("Class"), sep = "\\.", remove = FALSE, extra = 'drop') %>%
na.omit() %>%
mutate(RealClass = ifelse(grepl('TAG', Class), 'TAG',
ifelse(grepl("PE[.]O", Feature), "PE_O",
ifelse(grepl("PE[.]P", Feature), "PE_P", Class)))) %>%
dplyr::select(-Class) %>%
group_by(Mouse_ID, RealClass) %>%
mutate(sumLipids = sum(Value)) %>%
ungroup() %>%
dplyr::select(Mouse_ID, Treatment, RealClass, Feature, Value, sumLipids) %>%
distinct() %>%
#filter(RealClass == 'CE') %>%
filter(Feature == 'CE.18.1.') %>%
ggplot(aes(x = Treatment, y = Value)) + geom_boxplot() + geom_text(aes(label = Mouse_ID))
# plasma CE heatmap
complete_plasmaData %>%
tibble::rownames_to_column(var = "Mouse_ID") %>%
gather(Feature, Value, 2:275) %>%
separate(col = 'Feature', into = c("Class"), sep = "\\.", remove = FALSE, extra = 'drop') %>%
na.omit() %>%
mutate(RealClass = ifelse(grepl('TAG', Class), 'TAG',
ifelse(grepl("PE[.]O", Feature), "PE_O",
ifelse(grepl("PE[.]P", Feature), "PE_P", Class)))) %>%
dplyr::select(-Class) %>%
group_by(Mouse_ID, RealClass) %>%
mutate(sumLipids = sum(Value)) %>%
ungroup() %>%
dplyr::select(Mouse_ID, Treatment, RealClass, Feature, Value, sumLipids) %>%
distinct() %>%
#filter(RealClass == 'CE') %>%
filter(Feature == 'CE.18.1.') %>%
ggplot(aes(x = Treatment, y = log10(Value))) + geom_boxplot() + geom_text(aes(label = Mouse_ID))
#source("https://bioconductor.org/biocLite.R")
#biocLite("DESeq2")
#if (!requireNamespace("BiocManager", quietly = TRUE))
#    install.packages("BiocManager")
#install.packages("WGCNA")
#if (!requireNamespace('BiocManager', quietly = TRUE))
#    install.packages('BiocManager')
#BiocManager::install('apeglm')
#BiocManager::install('EnhancedVolcano')
#if (!requireNamespace("BiocManager", quietly = TRUE))
#  install.packages("BiocManager")
#BiocManager::install("EnhancedVolcano")%
#ibrary(pathfindR)
library(dplyr)
library(tidyr)
library(ggplot2)
require(cowplot)
theme_set(theme_cowplot())
library(viridis)
library(RColorBrewer)
library(DESeq2)
library(GenomicFeatures)
library(apeglm)
library(EnhancedVolcano)
# load in all sample files
# note: one outlier sample was removed 7B_Index_09_control8 after visualizing PCA. If want to visualize it without that sample, do not run line of code where it removes file name from sampleFiles.
directory <- "../raw_data/SxaQSEQsYB051L3L4L5L6_combined"
sampleFiles <- (list.files(directory))
sampleFiles <- sampleFiles[-33] # remove 7B_Index_09_control8
# load in the gene key information
key = read.table('../raw_data/ensembl84_info.txt', header = TRUE, sep = '\t', quote="", fill=FALSE, stringsAsFactors = FALSE)
# get gene lengths for downstream FPKM normalization
gene_info = key %>% mutate(gene_length = Gene.End..bp. - Gene.Start..bp. + 1) %>% dplyr::select(Ensembl.Gene.ID, Associated.Gene.Name, gene_length) %>% distinct()
# create DESeq object
sampleCondition <- sub("(.*treated).*","\\1",sampleFiles)
sampleTable <- data.frame(sampleName = sampleFiles,
fileName = sampleFiles,
condition = sampleFiles)
sampleTable <- sampleTable %>%
separate(col = 'condition', into = c("exp", "index", "condition"), sep = "_", remove = F)
sampleTable <- subset(sampleTable, select = -c(exp, index))
sampleTable$condition <- gsub(".count", "", sampleTable$condition)
sampleTable$condition <- gsub("control8", "0", sampleTable$condition)
sampleTable$condition <- gsub("treated", "", sampleTable$condition)
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,
directory = directory,
design = ~condition)
#Set the reference group to 0 week
ddsHTSeq$condition <- relevel(ddsHTSeq$condition, ref = "0")
#Filter out reads whose row sums are less than 10
ddsHTSeq <- ddsHTSeq[rowSums(counts(ddsHTSeq))>=10,]
# Run DESeq
dds <- DESeq(ddsHTSeq)
# Figure 3A: PCA of variance-stabilized transform data
vsd = vst(dds)
levels(vsd$condition) = c("CHOW8", "WD2", "WD4", "WD6", "WD8")
plotPCA(vsd) + scale_color_manual(values = c('black', '#3b9bb3', '#75af4f', '#e39225', '#c13b41'), name = "Treatment")
ggsave('../main_figs/Fig3A.pdf', height = 5, width = 6)
# Figure 3A: PCA of variance-stabilized transform data
vsd = vst(dds)
levels(vsd$condition) = c("CHOW8", "WD2", "WD4", "WD6", "WD8")
plotPCA(vsd) + scale_color_manual(values = c('black', '#3b9bb3', '#75af4f', '#e39225', '#c13b41'), name = "Treatment")
ggsave('../main_figs/Fig3A.pdf', height = 5, width = 6)
# Figure 3A: PCA of variance-stabilized transform data
vsd = vst(dds)
levels(vsd$condition) = c("CHOW8", "WD2", "WD4", "WD6", "WD8")
plotPCA(vsd) + scale_color_manual(values = c('black', '#3b9bb3', '#75af4f', '#e39225', '#c13b41'), name = "Treatment")
ggsave('../figures/rnaseq_pca.pdf', height = 5, width = 6)
# get total # significant genes, up-regulated and down-regulated that were q < 0.05 for all diet condition comparisons
comparisons = list(list("0", "2"), list("0", "4"), list("0", "6"), list("0", "8"), list("2", "4"), list("2", "6"), list("2", "8"), list("4", "6"), list("4", "8"), list("6", "8"))
table = data.frame("Condition1" = integer(), "Condition2" = integer(), "Total" = integer(), "Up" = integer(), "Down" = integer(), stringsAsFactors = FALSE)
for(i in 1:10) {
res = results(dds, contrast = c("condition", as.numeric(comparisons[[i]][1]), as.numeric(comparisons[[i]][2])))
total = nrow(as.data.frame(subset(res, padj < 0.05)))
up = nrow(filter(as.data.frame(subset(res, padj < 0.05)), log2FoldChange > 0))
down = nrow(filter(as.data.frame(subset(res, padj < 0.05)), log2FoldChange < 0))
if(up + down != total) {
print("ERROR: # sig up/down-regulated genes does not add up to total.")
}
data_entry = data.frame("Condition1" = as.numeric(comparisons[[i]][1]), "Condition2" = as.numeric(comparisons[[i]][2]), "Total" = total, "Up" = up, "Down" = down, stringsAsFactors = FALSE)
table = rbind(table, data_entry)
}
# heatmaps of significantly differentially-expressed genes
a <- table %>% ggplot(aes(x = Condition1, y = Condition2)) + geom_tile(aes(fill = Total), color = 'black', size = 0.5, alpha = 0.9) +
scale_fill_viridis() + scale_x_continuous(breaks=seq(0,8,2)) + scale_y_continuous(breaks=seq(0,8,2)) + labs(x = "Weeks on Western Diet", y = "Weeks on Western Diet", title = "Total") + geom_text(aes(label = Total), size = 6) + theme(legend.position = "none")
b <- table %>% ggplot(aes(x = Condition1, y = Condition2)) + geom_tile(aes(fill = Up), color = 'black', size = 0.5, alpha = 0.9) +
scale_fill_viridis() + scale_x_continuous(breaks=seq(0,8,2)) + scale_y_continuous(breaks=seq(0,8,2)) + labs(x = "Weeks on Western Diet", y = "Weeks on Western Diet", title = "Up-regulated") + geom_text(aes(label = Up), size = 6) + theme(legend.position = "none")
c <- table %>% ggplot(aes(x = Condition1, y = Condition2)) + geom_tile(aes(fill = Down), color = 'black', size = 0.5, alpha = 0.9) +
scale_fill_viridis() + scale_x_continuous(breaks=seq(0,8,2)) + scale_y_continuous(breaks=seq(0,8,2)) + labs(x = "Weeks on Western Diet", y = "Weeks on Western Diet", title = "Down-regulated") + geom_text(aes(label = Down), size = 6) + theme(legend.position = "none")
plot_grid(a,b,c, ncol = 3)
ggsave('../figures/rnaseq_pairwise_de_genes_heatmap.pdf', height = 5, width = 13)
rm(a,b,c)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggfortify)
library(bnstruct)
library(viridis)
require(cowplot)
library(DescTools)
library(RColorBrewer)
theme_set(theme_cowplot())
# load in data
raw_liverData = read.csv('../raw_data/ETV007_Liver_Lipidomics.csv', header = TRUE, fill = TRUE, stringsAsFactors = FALSE)
raw_plasmaData <- read.csv("../raw_data/ETV007_Plasma_Lipidomics.csv", header = TRUE, fill = TRUE, stringsAsFactors = FALSE)
# PCA plot for liver lipids by diet
# looks like, by 95% confidence ellipse, Mice 53 and 39 are outliers. We remove them and replot the PCA. They are also excluded from the remaining analysis.
complete_liverData = raw_liverData[ ,colSums(is.na(raw_liverData)) <= 0*nrow(raw_liverData)] # remove any column with NA
row.names(complete_liverData) = paste(complete_liverData$Treatment, "_", complete_liverData$Mouse_ID)
autoplot(prcomp(complete_liverData[-c(1,2)], scale. = TRUE), data = complete_liverData, colour = 'Treatment', label = TRUE, label.size = 3, frame = TRUE, frame.type = 'norm', frame.level = 0.95)
`%notin%` <- Negate(`%in%`)
filtered_liverData = filter(complete_liverData, Mouse_ID %notin% c(53,39))
row.names(filtered_liverData) = paste(filtered_liverData$Treatment, "_", filtered_liverData$Mouse_ID, sep = "")
autoplot(prcomp(filtered_liverData[-c(1,2)], scale. = TRUE), data = filtered_liverData, colour = 'Treatment', size = 2.5) + scale_color_manual(values = c('black', '#3b9bb3', '#75af4f', '#e39225', '#c13b41'))
ggsave('../figures/lipidomics_liver_pca.pdf', height = 4, width = 6)
# PCA plot for plasma lipids by diet
# looks like, by 95% confidence ellipse, no outliers
complete_plasmaData = raw_plasmaData[ ,colSums(is.na(raw_plasmaData)) <= 0*nrow(raw_plasmaData)] # remove any column with NA
mouse_to_diet_ID = complete_liverData[,c(1,2)]
complete_plasmaData = complete_plasmaData %>% left_join(., mouse_to_diet_ID, by = c("Name" = "Mouse_ID"))
row.names(complete_plasmaData) = paste(complete_plasmaData$Treatment, "_", complete_plasmaData$Name, sep = "")
complete_plasmaData = complete_plasmaData %>% select(-Name)
write.csv('../processed_data/data_tables/lipidomics_liver_clean.csv')
write.csv(filtered_liverData, '../processed_data/data_tables/lipidomics_liver_clean.csv')
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggfortify)
library(bnstruct)
library(viridis)
require(cowplot)
library(DescTools)
library(RColorBrewer)
theme_set(theme_cowplot())
# load in data
raw_liverData = read.csv('../raw_data/ETV007_Liver_Lipidomics.csv', header = TRUE, fill = TRUE, stringsAsFactors = FALSE)
raw_plasmaData <- read.csv("../raw_data/ETV007_Plasma_Lipidomics.csv", header = TRUE, fill = TRUE, stringsAsFactors = FALSE)
# PCA plot for plasma lipids by diet
# looks like, by 95% confidence ellipse, no outliers
complete_plasmaData = raw_plasmaData[ ,colSums(is.na(raw_plasmaData)) <= 0*nrow(raw_plasmaData)] # remove any column with NA
mouse_to_diet_ID = complete_liverData[,c(1,2)]
# PCA plot for liver lipids by diet
# looks like, by 95% confidence ellipse, Mice 53 and 39 are outliers. We remove them and replot the PCA. They are also excluded from the remaining analysis.
complete_liverData = raw_liverData[ ,colSums(is.na(raw_liverData)) <= 0*nrow(raw_liverData)] # remove any column with NA
row.names(complete_liverData) = paste(complete_liverData$Treatment, "_", complete_liverData$Mouse_ID)
autoplot(prcomp(complete_liverData[-c(1,2)], scale. = TRUE), data = complete_liverData, colour = 'Treatment', label = TRUE, label.size = 3, frame = TRUE, frame.type = 'norm', frame.level = 0.95)
`%notin%` <- Negate(`%in%`)
filtered_liverData = filter(complete_liverData, Mouse_ID %notin% c(53,39))
row.names(filtered_liverData) = paste(filtered_liverData$Treatment, "_", filtered_liverData$Mouse_ID, sep = "")
write.csv(filtered_liverData, '../processed_data/data_tables/lipidomics_liver_clean.csv')
autoplot(prcomp(filtered_liverData[-c(1,2)], scale. = TRUE), data = filtered_liverData, colour = 'Treatment', size = 2.5) + scale_color_manual(values = c('black', '#3b9bb3', '#75af4f', '#e39225', '#c13b41'))
ggsave('../figures/lipidomics_liver_pca.pdf', height = 4, width = 6)
# PCA plot for plasma lipids by diet
# looks like, by 95% confidence ellipse, no outliers
complete_plasmaData = raw_plasmaData[ ,colSums(is.na(raw_plasmaData)) <= 0*nrow(raw_plasmaData)] # remove any column with NA
mouse_to_diet_ID = complete_liverData[,c(1,2)]
complete_plasmaData = complete_plasmaData %>% left_join(., mouse_to_diet_ID, by = c("Name" = "Mouse_ID"))
row.names(complete_plasmaData) = paste(complete_plasmaData$Treatment, "_", complete_plasmaData$Name, sep = "")
complete_plasmaData = complete_plasmaData %>% select(-Name)
write.csv(complete_plasmaData, '../processed_data/data_tables/lipidomics_plasma_clean.csv')
autoplot(prcomp(complete_plasmaData[,-ncol(complete_plasmaData)], scale. = TRUE), data = complete_plasmaData, colour = 'Treatment', label = TRUE, label.size = 3, frame = TRUE, frame.type = 'norm', frame.level = 0.95)
autoplot(prcomp(complete_plasmaData[,-ncol(complete_plasmaData)], scale. = TRUE), data = complete_plasmaData, colour = 'Treatment', size = 2.5) + scale_color_manual(values = c('black', '#3b9bb3', '#75af4f', '#e39225', '#c13b41'))
ggsave('../figures/lipidomics_plasma_pca.pdf', height = 4, width = 6)
# PCA plot for liver lipids by diet
# looks like, by 95% confidence ellipse, Mice 53 and 39 are outliers. We remove them and replot the PCA. They are also excluded from the remaining analysis.
complete_liverData = raw_liverData[ ,colSums(is.na(raw_liverData)) <= 0*nrow(raw_liverData)] # remove any column with NA
row.names(complete_liverData) = paste(complete_liverData$Treatment, "_", complete_liverData$Mouse_ID)
autoplot(prcomp(complete_liverData[-c(1,2)], scale. = TRUE), data = complete_liverData, colour = 'Treatment', label = TRUE, label.size = 3, frame = TRUE, frame.type = 'norm', frame.level = 0.95)
`%notin%` <- Negate(`%in%`)
filtered_liverData = filter(complete_liverData, Mouse_ID %notin% c(53,39))
row.names(filtered_liverData) = paste(filtered_liverData$Treatment, "_", filtered_liverData$Mouse_ID, sep = "")
write.csv(filtered_liverData %>% select(-c(Mouse_ID, Treatment)), '../processed_data/data_tables/lipidomics_liver_clean.csv')
autoplot(prcomp(filtered_liverData[-c(1,2)], scale. = TRUE), data = filtered_liverData, colour = 'Treatment', size = 2.5) + scale_color_manual(values = c('black', '#3b9bb3', '#75af4f', '#e39225', '#c13b41'))
ggsave('../figures/lipidomics_liver_pca.pdf', height = 4, width = 6)
write.csv(complete_plasmaData %>% select(-Treatment), '../processed_data/data_tables/lipidomics_plasma_clean.csv')
library(dplyr)
library(tidyr)
library(ggplot2)
require(cowplot)
theme_set(theme_cowplot())
library(viridis)
library(RColorBrewer)
library(WGCNA)
#library(NMF)
# load in FPKM RNA-seq data
all_genes = read.csv('../processed_data/data_tables/RNA-seq-FPKM-with-gene-names.csv', header = TRUE, row.names = 1)
# load in FPKM RNA-seq data
all_genes = read.csv('../processed_data/data_tables/RNA-seq-FPKM-with-gene-names.csv', header = TRUE, row.names = 1)
# load in liver lipid data
liverlipids = read.csv('../processed_data/data_tables/lipidomics_liver_clean.csv', header = TRUE, row.names = 1)
# load in plasma data
plasmalipids = read.csv('../processed_data/data_tables/lipidomics_plasma_clean.csv', header = TRUE, row.names = 1)
# merging RNA-seq and liver lipidomics by same identifier. We will merge by the lipidomics ID.
head(all_genes, 3)
head(liverlipids, 3)
# load in mapping file for RNA-seq and Lipidomics ID's
rnaseq_mapping_list = read.table('~/Desktop/ETV007/raw_data/rnaseq_mapping_list.txt', header = TRUE, stringsAsFactors = FALSE)
View(rnaseq_mapping_list)
medians = data.frame("Median" = apply(all_genes, 2, median, na.rm = T)) %>% tibble::rownames_to_column(var = "Gene") %>% filter(Median > 0.1)
# filter genes by FPKM > 0.1 and tag them with the lipidomics ID
filtered_genes = all_genes %>% dplyr::select(medians$Gene) %>% tibble::rownames_to_column(var = "RNA_seq_ID") %>% left_join(., rnaseq_mapping_list, by = "RNA_seq_ID")
ordered_lipidomics_ID = filtered_genes$Lipidomics_ID
ordered_liverlipids = liverlipids %>% tibble::rownames_to_column(var = "Lipidomics_ID") %>% filter(Lipidomics_ID %in% ordered_lipidomics_ID)
setdiff(ordered_lipidomics_ID, ordered_liverlipids$Lipidomics_ID) # remove WD4_39 from RNA-seq data
ordered_geneData = filtered_genes %>% filter(Lipidomics_ID != 'WD4_39') %>% arrange(factor(Lipidomics_ID, levels = ordered_liverData$Lipidomics_ID))
ordered_geneData = filtered_genes %>% filter(Lipidomics_ID != 'WD4_39') %>% arrange(factor(Lipidomics_ID, levels = ordered_liverlipids$Lipidomics_ID))
# data is ordered! remove non quantitative columns
ordered_liverlipids = ordered_liverlipids %>% dplyr::select(-Lipidomics_ID)
ordered_geneData = ordered_geneData %>% dplyr::select(-RNA_seq_ID, -Lipidomics_ID)
# use same filtered genes by FPKM > 0.1 from above and tag them with the lipidomics ID
ordered_lipidomics_ID = filtered_genes$Lipidomics_ID
ordered_plasmalipids = plasmalipids %>% tibble::rownames_to_column(var = "Lipidomics_ID") %>% filter(Lipidomics_ID %in% ordered_lipidomics_ID)
ordered_geneData_for_liver = ordered_geneData %>% dplyr::select(-RNA_seq_ID, -Lipidomics_ID)
# merging RNA-seq and liver lipidomics by same identifier. We will merge by the lipidomics ID.
head(all_genes, 3)
head(liverlipids, 3)
# load in mapping file for RNA-seq and Lipidomics ID's
rnaseq_mapping_list = read.table('~/Desktop/ETV007/raw_data/rnaseq_mapping_list.txt', header = TRUE, stringsAsFactors = FALSE)
medians = data.frame("Median" = apply(all_genes, 2, median, na.rm = T)) %>% tibble::rownames_to_column(var = "Gene") %>% filter(Median > 0.1)
# filter genes by FPKM > 0.1 and tag them with the lipidomics ID
filtered_genes = all_genes %>% dplyr::select(medians$Gene) %>% tibble::rownames_to_column(var = "RNA_seq_ID") %>% left_join(., rnaseq_mapping_list, by = "RNA_seq_ID")
ordered_lipidomics_ID = filtered_genes$Lipidomics_ID
ordered_liverlipids = liverlipids %>% tibble::rownames_to_column(var = "Lipidomics_ID") %>% filter(Lipidomics_ID %in% ordered_lipidomics_ID)
setdiff(ordered_lipidomics_ID, ordered_liverlipids$Lipidomics_ID) # remove WD4_39 from RNA-seq data
ordered_geneData = filtered_genes %>% filter(Lipidomics_ID != 'WD4_39') %>% arrange(factor(Lipidomics_ID, levels = ordered_liverlipids$Lipidomics_ID))
# data is ordered! remove non quantitative columns
ordered_liverlipids = ordered_liverlipids %>% dplyr::select(-Lipidomics_ID)
ordered_geneData_for_liver = ordered_geneData %>% dplyr::select(-RNA_seq_ID, -Lipidomics_ID)
ordered_geneData = filtered_genes %>% arrange(factor(Lipidomics_ID, levels = plasmalipids$Lipidomics_ID))
# check that data is ordered
assertthat::are_equal(ordered_geneData$Lipidomics_ID, ordered_plasmalipids$Lipidomics_ID)
# merging RNA-seq and plasma lipidomics by same identifier. We will merge by the lipidomics ID.
head(all_genes, 3)
# merging RNA-seq and plasma lipidomics by same identifier. We will merge by the lipidomics ID.
head(all_genes, 3)
head(plasmalipids, 3)
# use same filtered genes by FPKM > 0.1 from above and tag them with the lipidomics ID
ordered_lipidomics_ID = filtered_genes$Lipidomics_ID
ordered_plasmalipids = plasmalipids %>% tibble::rownames_to_column(var = "Lipidomics_ID") %>% filter(Lipidomics_ID %in% ordered_lipidomics_ID)
ordered_geneData = filtered_genes %>% arrange(factor(Lipidomics_ID, levels = plasmalipids$Lipidomics_ID))
# check that data is ordered
assertthat::are_equal(ordered_geneData$Lipidomics_ID, ordered_plasmalipids$Lipidomics_ID)
ordered_geneData$Lipidomics_ID
ordered_plasmalipids$Lipidomics_ID
ordered_geneData$Lipidomics_ID
ordered_plasmalipids$Lipidomics_ID
ordered_geneData$Lipidomics_ID
ordered_plasmalipids$Lipidomics_ID
ordered_geneData$Lipidomics_ID
ordered_plasmalipids$Lipidomics_ID
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggfortify)
library(bnstruct)
library(viridis)
require(cowplot)
library(DescTools)
library(RColorBrewer)
theme_set(theme_cowplot())
# load in data
raw_liverData = read.csv('../raw_data/ETV007_Liver_Lipidomics.csv', header = TRUE, fill = TRUE, stringsAsFactors = FALSE)
raw_plasmaData <- read.csv("../raw_data/ETV007_Plasma_Lipidomics.csv", header = TRUE, fill = TRUE, stringsAsFactors = FALSE)
# PCA plot for liver lipids by diet
# looks like, by 95% confidence ellipse, Mice 53 and 39 are outliers. We remove them and replot the PCA. They are also excluded from the remaining analysis.
complete_liverData = raw_liverData[ ,colSums(is.na(raw_liverData)) <= 0*nrow(raw_liverData)] # remove any column with NA
row.names(complete_liverData) = paste(complete_liverData$Treatment, "_", complete_liverData$Mouse_ID)
autoplot(prcomp(complete_liverData[-c(1,2)], scale. = TRUE), data = complete_liverData, colour = 'Treatment', label = TRUE, label.size = 3, frame = TRUE, frame.type = 'norm', frame.level = 0.95)
autoplot(prcomp(filtered_liverData[-c(1,2)], scale. = TRUE), data = filtered_liverData, colour = 'Treatment', size = 2.5) + scale_color_manual(values = c('black', '#3b9bb3', '#75af4f', '#e39225', '#c13b41'))
row.names(complete_liverData) = paste(complete_liverData$Treatment, "_", complete_liverData$Mouse_ID)
autoplot(prcomp(complete_liverData[-c(1,2)], scale. = TRUE), data = complete_liverData, colour = 'Treatment', label = TRUE, label.size = 3, frame = TRUE, frame.type = 'norm', frame.level = 0.95)
library(tidyverse)
library(phyloseq)
?import_biom
data = import_biom('../raw_data/otu_table_mc2_w_tax_no_pynast_failures_0.005__Study_ETV007__nowtr.biom')
View(data)
data = import_biom('../raw_data/ETV007-Microbiome-nonrarefied.biom')
